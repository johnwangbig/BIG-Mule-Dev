<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="account-api-impl-test-suite.xml" />
	<munit:test name="account-api-impl-test-createAccount-400" doc:id="57c333f1-e490-44fd-9225-ad9e3a95703d" description="Create Account failed - Salesforce detected suspicious duplicqte accounts">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when::sfdc-create" doc:id="d3b6f4bd-8c2e-45fe-855d-0b44ff8182a1" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Create" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="94855f2b-09ba-40f6-921b-945df596f4db" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="result" value="#[MunitTools::getResourceAsString('mock/sfdc-create-ng.json')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="683cff37-a468-411d-9582-47a76d97d4d8" cloneOriginalEvent="true">
				<munit:payload value='#[output application/json
---
{
  "name": "JohnCreate",
  "country": "CA",
  "postalcode": "L1L1L1",
  "state": "ON",
  "city": "Toronto"
}
]' mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to createAccount" doc:id="48af4c1b-aa19-48c6-b684-5fada2902671" name="createAccount" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="vars.httpStatus='400'" doc:id="0a6decb5-7100-462c-afb5-0f0c5e15095b" actual="#[vars.httpStatus]" expected="#['400']" message='#["should bet httpStatus 400 but get" ++ vars.httpStatus]'/>
			<munit-tools:assert-equals doc:name="Assert subcode" doc:id="c10e9d68-487c-4b28-aeba-64cddd02082e" actual="#[payload.subcode]" expected="#['DUPLICATES_DETECTED']" message="payload.subcode should be 'DUPLICATES_DETECTED'"/>
		</munit:validation>
	</munit:test>
	<munit:test name="account-api-impl-test-createAccount-201" doc:id="a6454142-5d28-4a4f-872c-c1687ddadf74" >
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="3b7ee3f3-2b02-424f-8eff-4cd6be72a044" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Create" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="94855f2b-09ba-40f6-921b-945df596f4db" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="result" value="#[MunitTools::getResourceAsString('mock/sfdc-create-ok.json')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="c332e986-f4cd-4b31-be2b-0239f4ac6801" cloneOriginalEvent="true">
				<munit:payload value='#[output application/json
---
{
  "name": "JohnCreate",
  "country": "CA",
  "postalcode": "L1L1L1",
  "state": "ON",
  "city": "Toronto"
}
]' mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to createAccount" doc:id="b645c4fa-4c4e-4e6f-9e6b-12bbe431dd3a" name="createAccount" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="vars.httpStatus='201'" doc:id="c0ae8dd9-b791-4d35-9faa-fc64d641f85b" actual="#[vars.httpStatus]" expected="#['201']" message='#["should bet httpStatus 201 but get" ++ vars.httpStatus]' />
			<munit-tools:assert-equals doc:name="Assert Location Header" doc:id="eb882cc7-5a98-4cfc-abba-6502ce117ff2" actual="#[vars.outboundHeaders['Location']]" expected="#['accounts/123456789012345678']" message="location header should be set to accounts/123456789012345678" />
			<munit-tools:assert-that expression="#[payload]" is="#[MunitTools::nullValue()]" doc:name="Assert payload is null" message="payload is not null"/>
		</munit:validation>
	</munit:test>

</mule>
